// <auto-generated />
using ApiLaboratorio.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiLaboratorio.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240207212702_obj")]
    partial class obj
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiLaboratorio.Models.Asignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HorarioID")
                        .HasColumnType("int");

                    b.Property<int>("IdAsignacion")
                        .HasColumnType("int");

                    b.Property<int>("IdUserRol")
                        .HasColumnType("int");

                    b.Property<int>("LaboratorioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HorarioID");

                    b.HasIndex("IdAsignacion");

                    b.HasIndex("IdUserRol");

                    b.HasIndex("LaboratorioId");

                    b.ToTable("Asignaciones");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.AsignarMateria", b =>
                {
                    b.Property<int>("id_Asignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Asignacion"));

                    b.Property<int>("Carrera_id")
                        .HasColumnType("int");

                    b.Property<int>("Materia_id")
                        .HasColumnType("int");

                    b.HasKey("id_Asignacion");

                    b.HasIndex("Carrera_id");

                    b.HasIndex("Materia_id");

                    b.ToTable("AsignacionesMaterias");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.Carrera", b =>
                {
                    b.Property<int>("CarreraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarreraId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("CarreraId");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.Facultad", b =>
                {
                    b.Property<int>("FacultadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacultadID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacultadID");

                    b.ToTable("Facultades");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.Horario", b =>
                {
                    b.Property<int>("HorarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HorarioID"));

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("HorarioID");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.Laboratorio", b =>
                {
                    b.Property<int>("Laboratorio_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Laboratorio_id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Laboratorio_id");

                    b.ToTable("Laboratorios");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.Materia", b =>
                {
                    b.Property<int>("Materia_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Materia_id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Materia_id");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.RolUsuario", b =>
                {
                    b.Property<int>("IdUserRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUserRol"));

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdUserRol");

                    b.HasIndex("RolId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RolesUsuarios");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.Role", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.Asignacion", b =>
                {
                    b.HasOne("ApiLaboratorio.Models.Horario", "Horario")
                        .WithMany()
                        .HasForeignKey("HorarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiLaboratorio.Models.AsignarMateria", "AsignarMateria")
                        .WithMany()
                        .HasForeignKey("IdAsignacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiLaboratorio.Models.RolUsuario", "RolUsuario")
                        .WithMany()
                        .HasForeignKey("IdUserRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiLaboratorio.Models.Laboratorio", "Laboratorio")
                        .WithMany()
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AsignarMateria");

                    b.Navigation("Horario");

                    b.Navigation("Laboratorio");

                    b.Navigation("RolUsuario");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.AsignarMateria", b =>
                {
                    b.HasOne("ApiLaboratorio.Models.Carrera", "Carrera")
                        .WithMany("AsignarMaterias")
                        .HasForeignKey("Carrera_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiLaboratorio.Models.Materia", "Materia")
                        .WithMany("AsignarMaterias")
                        .HasForeignKey("Materia_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.RolUsuario", b =>
                {
                    b.HasOne("ApiLaboratorio.Models.Role", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiLaboratorio.Models.User", "Usuario")
                        .WithMany("UserRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.Carrera", b =>
                {
                    b.Navigation("AsignarMaterias");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.Materia", b =>
                {
                    b.Navigation("AsignarMaterias");
                });

            modelBuilder.Entity("ApiLaboratorio.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
